<?xml version="1.0"?>

<robot name="sensor_r200" xmlns:xacro="http://ros.org/wiki/xacro">
  
  <!-- Parametring the positions -->

  <xacro:property name="r200_cam_px" value="0.12" />
  <xacro:property name="r200_cam_pz" value="0.1268" />
  <xacro:property name="r200_cam_py" value="0.082"/>

    <!-- Following values measured on the 3d model -->
  <xacro:property name="r200_cam_rgb_px" value="0.0088"/>
  <xacro:property name="r200_cam_rgb_py" value="-0.1034"/>
  <xacro:property name="r200_cam_rgb_pz" value="0.0483"/>
  <xacro:property name="r200_cam_depth_offset" value="0.0274"/>

  <!-- Also parameterised in part by the values in turtlebot_properties.urdf.xacro -->

  <!--
  Seems like this weird organization is required for move_base to work properly...
  parent > camera_rgb_frame
  -->

  <xacro:macro name="sensor_r200" params="prefix parent">
    <!--
    ==  RGB joints & links ==
    -->
<!--
    <link name="${prefix}camera_rgb_frame">
      <inertial>
        <mass value="0.0564" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.003881243" ixy="0.0" ixz="0.0"
                 iyy="0.000498940" iyz="0.0"
                 izz="0.003879257" />
      </inertial>
    </link>

    <link name="${prefix}camera_rgb_optical_frame">
      <inertial>
        <mass value="0.0564" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.003881243" ixy="0.0" ixz="0.0"
                 iyy="0.000498940" iyz="0.0"
                 izz="0.003879257" />
      </inertial>
    </link>
-->
    <!-- Mounting the camera at the right position -->
    <link name="${prefix}camera_link">
      <visual>
       <origin xyz="${-r200_cam_rgb_px + -r200_cam_px} ${-r200_cam_rgb_py + -r200_cam_py} ${-r200_cam_rgb_pz + -r200_cam_pz}" rpy="${M_PI/2} 0 ${M_PI/2}"/>
        <geometry>
            <mesh filename="package://yuri_perception/cameras/realsense/meshes/r200_entire.dae"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
        <geometry>
          <box size="0.130 0.567 0.118"/>
        </geometry>
      </collision>
      <!-- This inertial field needs doesn't contain reliable data!! -->
      <inertial>
        <mass value="0.564" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.003881243" ixy="0.0" ixz="0.0"
                 iyy="0.000498940" iyz="0.0"
                 izz="0.003879257" />
      </inertial>
    </link>

    <!--
    ==  Depth joints & links ==
    -->


  <!--
    <joint name="${prefix}camera_rgb_joint" type="fixed">
      <origin xyz="${r200_cam_rgb_px + r200_cam_px} ${r200_cam_rgb_py + r200_cam_py} ${r200_cam_rgb_pz + r200_cam_pz}" rpy="0 0 0"/>
      <parent link="${parent}"/>
      <child link="${prefix}camera_rgb_frame" />
    </joint>


    <joint name="${prefix}camera_rgb_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="${prefix}camera_rgb_frame" />
      <child link="${prefix}camera_rgb_optical_frame" />
    </joint>

  	<joint name="${prefix}camera_depth_joint" type="fixed">
  	  <origin xyz="0 ${r200_cam_depth_offset} 0" rpy="0 0 0" />
  	  <parent link="${prefix}camera_rgb_frame" />
  	  <child link="${prefix}camera_depth_frame" />
  	</joint>
  	<link name="${prefix}camera_depth_frame"/>

  	<joint name="${prefix}camera_depth_optical_joint" type="fixed">
  	  <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
  	  <parent link="${prefix}camera_depth_frame" />
  	  <child link="${prefix}camera_depth_optical_frame" />
  	</joint>
  	<link name="${prefix}camera_depth_optical_frame"/>
  -->
    <!-- Placing the camera joint -->
    <joint name="${prefix}camera_joint" type="fixed">
      <origin xyz="${r200_cam_px} ${r200_cam_py} ${r200_cam_pz}" rpy="0 0 0"/>
      <parent link="${parent}"/>
      <child link="${prefix}camera_link"/>
    </joint>


  </xacro:macro>
</robot>
