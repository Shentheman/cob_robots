<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro"
       name="raw3-6" >
  <arg name="load_wrist_camera_simulator" default="$(optenv LOAD_WRIST_CAMERA_SIMULATOR !!NO_LOAD_WRIST_CAMERA_SIMULATOR_SET!!)"/>
  <arg name="fix_base_with_world" default="$(optenv FIX_BASE_WITH_WORLD !!NO_FIX_BASE_WITH_WORLD_SET!!)"/>
  <arg name="visualize_wrist_camera_simulator" default="$(optenv VISUALIZE_WRIST_CAMERA_SIMULATOR !!NO_VISUALIZE_WRIST_CAMERA_SIMULATOR_SET!!)"/>
  <arg name="visualize_sick_s300_simulator" default="$(optenv VISUALIZE_SICK_S300_SIMULATOR !!NO_VISUALIZE_SICK_S300_SIMULATOR_SET!!)"/>

  <arg name="ur10_urdf_path" default="$(optenv ur10_urdf_path !!NO_UR10_URDF_PATH_SET!!)"/>

  <arg name="sim" default="$(optenv SIM !!NO_SIM_SET!!)"/>

  <!-- common stuff -->
  <xacro:include filename="$(find cob_description)/urdf/common.xacro" />
  <xacro:include filename="$(find cob_description)/urdf/materials.urdf.xacro" />

  <xacro:include filename="$(find cob_hardware_config)/robots/raw3-6/urdf/properties.urdf.xacro" />

  <!-- raw base -->
  <xacro:include filename="$(find raw_description)/urdf/base_long/base.urdf.xacro" />

  <!-- raw tower -->
  <xacro:include filename="$(find raw_description)/urdf/tower_symetric/tower.urdf.xacro" />

  <!-- ur10 -->
  <!-- <xacro:include filename="$(find cob_description)/urdf/ur_arm/ur10_arm.urdf.xacro" /> -->
  <xacro:include filename="$(arg ur10_urdf_path)" />
  
  <!-- robotiq gripper -->
  <xacro:include filename="$(find cob_description)/urdf/robotiq_gripper/robotiq_s_gripper.urdf.xacro" />

  <!-- r200 Sensors -->
  <xacro:include filename="$(find cob_description)/urdf/sensors/r200.urdf.xacro"/>
  <xacro:include filename="$(find cob_description)/urdf/sensors/r200.gazebo.xacro"/>
  
  <!-- sick s300 -->
  <xacro:include filename="$(find cob_description)/urdf/sensors/sick_s300_laser.urdf.xacro"/>

  <!-- composition of the robot -->
  <xacro:property name="base_name" value="base" />
  <xacro:raw_base sim="$(arg sim)" visualize_sick_s300_simulator="$(arg visualize_sick_s300_simulator)" name="${base_name}"/>

  <!-- These are already defined at ./src/cob_common/raw_description/urdf/base_long/base.urdf.xacro. -->
  <!-- These are already defined at ./src/cob_common/raw_description/urdf/base_short/base.urdf.xacro. -->
  <!-- base laser front -->
  <!--XXX: these parameters are from cob_robots/cob_hardware_config/robots/raw3-5/urdf/properties.urdf.xacro-->
  <!-- <xacro:sick_s300_laser_v0 name="base_laser_front" parent="base">
    <origin xyz="${laser_front_x} ${laser_front_y} ${laser_front_z}" rpy="${laser_front_roll} ${laser_front_pitch} ${laser_front_yaw}" />
  </xacro:sick_s300_laser_v0> -->
  <!-- base laser rear -->
  <!-- <xacro:sick_s300_laser_v0 name="base_laser_rear" parent="base">
    <origin xyz="${laser_rear_x} ${laser_rear_y} ${laser_rear_z}" rpy="${laser_rear_roll} ${laser_rear_pitch} ${laser_rear_yaw}" />
  </xacro:sick_s300_laser_v0> -->

  <xacro:tower_symetric name="tower" parent="base_link">
      <origin xyz="${tower_x} ${tower_y} ${tower_z}" rpy="${tower_roll} ${tower_pitch} ${tower_yaw}" />
  </xacro:tower_symetric>

  <xacro:ur10 name="arm" parent="base_link" sim="$(arg sim)">
    <origin xyz="${arm_x} ${arm_y} ${arm_z}" rpy="${arm_roll} ${arm_pitch} ${arm_yaw}" />
  </xacro:ur10>

  <!--Directly defined here instead of retrieving from-->
  <!--$(find cob_hardware_config)/robots/raw3-6/urdf/properties.urdf.xacro-->
  <!--it has to be arm_tool0 instead of arm_ee_link-->
  <!--<xacro:robotiq_hand prefix="gripper_" parent="arm_wrist_extension" reflect="0">-->
    <!--<origin xyz="0 0 .05" rpy="1.570795 0 -0.7753975"/>-->
  <!--</xacro:robotiq_hand>-->
  <xacro:robotiq name="gripper" parent="arm_tool0" reflect="0" sim="$(arg sim)">
  <!--<xacro:robotiq_hand prefix="gripper_" parent="arm_tool0" reflect="0">-->
    <!-- We have to rotate the gripper by 45 around z, so that it matches the real robot -->
    <origin xyz="0 0 .05" rpy="${90/180*pi} 0 -${45/180*pi}"/>
  </xacro:robotiq>

  
  <xacro:property name="wrist_camera_name" value="wrist_camera" />
  <!-- wrist_camera_r200_xyz and wrist_camera_r200_rpy = r200_in_palm_mat -->
  <!-- z - up or down on the gripper -->
  <!-- y - front or back from the gripper -->
  <!-- x - left or right side from the gripper -->
  <xacro:property name="wrist_camera_r200_xyz" value="0.0157  0.0012 -0.1006"/>
  <xacro:property name="wrist_camera_r200_rpy" value="0 1.57 1.57"/>


  <!-- The rpy for simulation is different from the rpy setup for the actual camera. If we use the rpy from actual camera in simulation, the view will be wrong -->
  <!-- gazebo plug-in for simulating the camera -->
  <xacro:r200
  sim="$(arg sim)"
  name="${wrist_camera_name}"
  parent="gripper_palm">
    <origin xyz="${wrist_camera_r200_xyz}" rpy="${wrist_camera_r200_rpy}"/>
  </xacro:r200>
  
  <xacro:if value="$(arg load_wrist_camera_simulator)">
    <xacro:r200_rgb_gazebo_v0
    name="${wrist_camera_name}"
    link_name="${wrist_camera_name}_rgb_frame"
    frame_name="${wrist_camera_name}_rgb_optical_frame"
    camera_name="${wrist_camera_name}"
    visualize_wrist_camera_simulator="$(arg visualize_wrist_camera_simulator)" />
    <xacro:r200_ir_gazebo_v0
    name="${wrist_camera_name}"
    link_name="${wrist_camera_name}_depth_frame"
    frame_name="${wrist_camera_name}_depth_optical_frame"
    camera_name="${wrist_camera_name}"
    visualize_wrist_camera_simulator="$(arg visualize_wrist_camera_simulator)" />
  </xacro:if>


  <joint name="${wrist_camera_name}_mount_joint" type="fixed">
    <origin xyz="-0.01 -0.012 -0.03" rpy="0 0 0" />
    <parent link="${wrist_camera_name}_link"/>
    <child link="${wrist_camera_name}_mount_link"/>
  </joint>

  <link name="${wrist_camera_name}_mount_link" >
    <inertial>
      <mass value="0.564" />
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
      <inertia ixx="0.003881243" ixy="0.0" ixz="0.0" iyy="0.000498940" iyz="0.0" izz="0.003879257" />
    </inertial>
    <visual>
     <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <!-- <box size="0.04 0.15 0.05"/> -->
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </visual>
    <collision>
     <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <!-- <box size="0.04 0.15 0.05"/> -->
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>
  </link>

  <!-- If we don't want the base to move at all: -->
  <!-- https://github.com/ros-industrial/universal_robot/blob/830a7b480063d66b22d939c42a0c6c08901713e6/ur_description/urdf/ur10_joint_limited_robot.urdf.xacro#L21 -->
  <xacro:if value="$(arg fix_base_with_world)">
    <link name="world" />
    <joint name="world_joint" type="fixed">
      <parent link="world" />
      <child link = "${base_name}_footprint" />
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
    </joint>
  </xacro:if>

  <!--
  <xacro:sensor_r200 prefix="vision_wrist_" parent="arm_tool0">
    <origin xyz="0 -0.3 .15" rpy="1.570795 0 -0.7753975"/>
  </xacro:sensor_r200>
  -->
  <!-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< -->


  <!--
  <gazebo>
    <plugin name="ros_control" filename="libhwi_switch_gazebo_ros_control.so">
      <robotNamespace>base</robotNamespace>
      <filterJointsParam>joint_names</filterJointsParam>
    </plugin>
  </gazebo>
  -->

  <!--
  <gazebo>
    <plugin name="ros_control" filename="libhwi_switch_gazebo_ros_control.so">
      <robotNamespace>arm</robotNamespace>
      <filterJointsParam>joint_names</filterJointsParam>
    </plugin>
  </gazebo>
  -->

  <!-- https://github.com/JenniferBuehler/gazebo-pkgs/wiki/The-Gazebo-grasp-fix-plugin -->
  <!-- Clone this in your workspace and that's it! -->
  <!-- https://github.com/JenniferBuehler/gazebo-pkgs -->
  <!-- TODO: It seems not working well in gazebo 2.0 -->
  <!-- <xacro:if value="$(arg sim)">
    <gazebo>
      <plugin name="gazebo_grasp_fix" filename="libgazebo_grasp_fix.so">
        <arm>
          <arm_name>UR10_arm1</arm_name>
            <palm_link>arm_wrist_3_link</palm_link>
            <gripper_link>gripper_finger_1_link_0</gripper_link>
            <gripper_link>gripper_finger_1_link_1</gripper_link>
            <gripper_link>gripper_finger_1_link_2</gripper_link>
            <gripper_link>gripper_finger_1_link_3</gripper_link>
            <gripper_link>gripper_finger_1_link_paradistal_hinge</gripper_link>
            <gripper_link>gripper_finger_1_link_median_actuating_hinge</gripper_link>
            <gripper_link>gripper_finger_1_link_median_bar</gripper_link>
            <gripper_link>gripper_finger_1_link_paramedian_hinge</gripper_link>
            <gripper_link>gripper_finger_1_link_median_bar_underactuated</gripper_link>
            <gripper_link>gripper_finger_1_link_paraproximal_actuating_hinge</gripper_link>
            <gripper_link>gripper_finger_1_link_paraproximal_bar</gripper_link>
            <gripper_link>gripper_finger_1_link_proximal_actuating_hinge</gripper_link>
            <gripper_link>gripper_finger_1_link_proximal_actuating_bar</gripper_link>
            <gripper_link>gripper_finger_2_link_0</gripper_link>
            <gripper_link>gripper_finger_2_link_1</gripper_link>
            <gripper_link>gripper_finger_2_link_2</gripper_link>
            <gripper_link>gripper_finger_2_link_3</gripper_link>
            <gripper_link>gripper_finger_2_link_paradistal_hinge</gripper_link>
            <gripper_link>gripper_finger_2_link_median_actuating_hinge</gripper_link>
            <gripper_link>gripper_finger_2_link_median_bar</gripper_link>
            <gripper_link>gripper_finger_2_link_paramedian_hinge</gripper_link>
            <gripper_link>gripper_finger_2_link_median_bar_underactuated</gripper_link>
            <gripper_link>gripper_finger_2_link_paraproximal_actuating_hinge</gripper_link>
            <gripper_link>gripper_finger_2_link_paraproximal_bar</gripper_link>
            <gripper_link>gripper_finger_2_link_proximal_actuating_hinge</gripper_link>
            <gripper_link>gripper_finger_2_link_proximal_actuating_bar</gripper_link>
            <gripper_link>gripper_finger_middle_link_0</gripper_link>
            <gripper_link>gripper_finger_middle_link_1</gripper_link>
            <gripper_link>gripper_finger_middle_link_2</gripper_link>
            <gripper_link>gripper_finger_middle_link_3</gripper_link>
            <gripper_link>gripper_finger_middle_link_paradistal_hinge</gripper_link>
            <gripper_link>gripper_finger_middle_link_median_actuating_hinge</gripper_link>
            <gripper_link>gripper_finger_middle_link_median_bar</gripper_link>
            <gripper_link>gripper_finger_middle_link_paramedian_hinge</gripper_link>
            <gripper_link>gripper_finger_middle_link_median_bar_underactuated</gripper_link>
            <gripper_link>gripper_finger_middle_link_paraproximal_actuating_hinge</gripper_link>
            <gripper_link>gripper_finger_middle_link_paraproximal_bar</gripper_link>
            <gripper_link>gripper_finger_middle_link_proximal_actuating_hinge</gripper_link>
            <gripper_link>gripper_finger_middle_link_proximal_actuating_bar</gripper_link>
        </arm>
        <forces_angle_tolerance>90</forces_angle_tolerance>
        <update_rate>4</update_rate>
        <grip_count_threshold>4</grip_count_threshold>
        <max_grip_count>8</max_grip_count>
        <release_tolerance>0.10</release_tolerance>
        <disable_collisions_on_attach>false</disable_collisions_on_attach>
        <contact_topic>__default_topic__</contact_topic>
      </plugin>
    </gazebo>
  </xacro:if> -->
</robot>
